<!--%%page.i
&secname=:: Examples
&name=Discrete-time AHinf-optimal controllers
&next=demo_filinf.html
&nextname=AHinf-optimal prediction 
&prev=demo_2dof.html
&prevname=2-DOF optimal tracking 
&content=
<H2>Example: Discrete-time <!--%%ahinf.i%%-->-optimization</H2>
<H3>Statement of the problem</H3>
Consider the following discrete-time system:
<CENTER><IMG SRC="images/dhinf_scheme.gif" WIDTH=362 HEIGHT=130 ALT=""></CENTER>
The plant
is modelled as two linear continuous-time
systems with transfer functions <span class=tms>F<SUB>1</SUB></span>(<span class=tms>d</span>)
and <span class=tms>F<SUB>2</SUB></span>(<span class=tms>d</span>) in the variable
<span class=tms>d&nbsp;=&nbsp;z<SUP>-1</SUP></span>.
<p>
Disturbance acting at the plant output is described as
a stationary centered stochastic discrete-time process
generated by a shaping filter <span class=tms>F<SUB>w</SUB></span>(<span class=tms>s</span>)
excited by a unit discrete white noise <span class=tms>w</span>.
<p>
Stochastic problem consists in minimizing
the cost function
<!--%%eqna.i&name=dhinf_j&w=93&h=23&no=1%%-->
where <SUB><IMG SRC="images/dhinf_vpsi.gif" WIDTH=20 HEIGHT=18 ALT=""></SUB>
and <SUB><IMG SRC="images/dhinf_vu.gif" WIDTH=20 HEIGHT=18 ALT=""></SUB>
denote variances of the signals
<span class=tms>&#949;<SUB>&#968;</SUB></span>
and <span class=tms>&#949;<SUB>u</SUB></span>,
respectively. This is equivalent to minimizing
the average variance of the output vector
<span class=tms>&#949;</span>&nbsp;=&nbsp;[<span class=tms>&#949;<SUB>&#968;</SUB>&nbsp;&#949;<SUB>u</SUB></span>].
The command signal <span class=tms>r</span> is assumed to be zero.
<p>
The problem of minimizing (1) can be reduced to minimization of
a functional of the form
<CENTER><IMG SRC="images/h2probx.gif" WIDTH=224 HEIGHT=47 ALT=""></CENTER>
where <span class=tms>X</span>(<span class=tms>z</span>) is
a Hermitian self-congugate function. As follows from
<A HREF="#ref1">[1]</A>, the associated <!--%%ahinf.i%%-->-problem
is formulated as
<!--%%eqna.i&name=adhinfx&w=241&h=41&no=2%%-->
It is required to find transfer function of the optimal
controller <span class=tms>K</span> that solves the problem (2)
over the set of stabilizing controllers.
<p>
Notice that all elements of the system operate in discrete time.

<H3>Standard discrete-time system</H3>
For <span class=tms>r</span>&nbsp;=&nbsp;0 operator equations of
the system can be written in the form:
<CENTER><IMG SRC="images/dhinf_op.gif" WIDTH=247 HEIGHT=74 ALT=""></CENTER>
so that the augmented plant for the standard system
appears as
<CENTER><IMG SRC="images/dhinf_pij.gif" WIDTH=371 HEIGHT=82 ALT=""></CENTER>

<H3>Example 1: proportional optimal controller</H3>
Let <A HREF="#ref1">[1]</A>:
<CENTER><IMG SRC="images/dhinf_fv1.gif" WIDTH=485 HEIGHT=48 ALT=""></CENTER>
The known data can be entered as follows:
<pre>
   T = 1;
   F1 = tf ( [1 0],  [-2 1], T );
   Fw = tf ( [1 -2], [-2 1], T );
</pre>
The plant for the standard system can be constructed as
<pre>
   sys = [Fw  F
           0  1
         -Fw -F];
</pre>
To ensure compatibility with existing packages,
the plant is to be transformed to <span class=tms>z</span>-form
by substitution <span class=tms>z<SUP>-1</SUP></span> for <span class=tms>d</span>:
<pre>
   sys = z2zeta ( sys );
</pre>
Then, the problem (2) can be solved using
<A HREF="../functions/dhinf.html">dhinf</A>
<pre>
   K = dhinf ( sys )

K: zero-pole-gain model 1 x 1

      1.5

</pre>
In this case, the optimal controller is a constant gain.
The <!--%%ahinf.i%%-->-cost function can be found
by means of                      
<A HREF="../functions/dahinorm.html">dahinorm</A>
<pre>
   dahinorm ( sys, K )

err =
    3.6056

</pre>

<H3>Example 2: generic case</H3>
Let <A HREF="#ref1">[1]</A>:
<CENTER><IMG SRC="images/dhinf_fv2.gif" WIDTH=318 HEIGHT=74 ALT=""></CENTER>
These data can be determined as
<pre>
   T = 1;
   F2 = tf ( 1, [-1 -2.1 1], T );
   F1 = tf ( [2 1 0], 1, T );
   Fw = tf ( [0.3 1], 1, T );
</pre>
Then, similarly to Example&nbsp;1 above, we can find
augmented plant for the standard system:
<pre>
   sys = [F2*Fw   F2*F1
            0       1
         -F2*Fw  -F2*F1];
   sys = z2zeta(sys);
</pre>
the <!--%%ahinf.i%%-->-optimal controller:
<pre>
   K = dhinf ( sys )

K: zero-pole-gain model 1 x 1

      1.6201 (z+0.4019)
      -----------------
          (z+1.302)

Sampling time: 1

</pre>
and the associated cost:
<pre>
   dahinorm ( sys, K )

err =
    2.1244

</pre>

<H3>Example 3: non-generic case</H3>
Let <A HREF="#ref1">[1]</A>:
<CENTER><IMG SRC="images/dhinf_fv3.gif" WIDTH=367 HEIGHT=74 ALT=""></CENTER>
These data can be determined as
<pre>
   T = 1;
   F1 = tf ( [-0.8 1 0], 1, T );
   F2 = tf ( 1, [0.32 -1.2 1], T );
   Fw = tf ( [-0.4 1], 1, T );
</pre>
Then, similarly to Example&nbsp;1 above, we can find
augmented plant for the standard system:
<pre>
   sys = [F2*Fw   F2*F1
            0       1
         -F2*Fw  -F2*F1];
   sys = z2zeta(sys);
</pre>
The function <A HREF="../functions/dhinf.html">dhinf</A>
returns a cell array
<pre>
   K = dhinf ( sys )

K =
    [1x1 zpk]    [1x1 zpk]

</pre>
This means that there are two optimal controllers:
<pre>
   K1 = K{1}

K1: zero-pole-gain model 1 x 1

      -0.72171 (z-2.24) (z-0.4)
      -------------------------
         (z+1.825) (z-0.8859)

Sampling time: 1

   K2 = K{2}

K2: zero-pole-gain model 1 x 1

      1.9521 (z-0.8282) (z-0.4)
      -------------------------
       (z^2  - 2.496z + 1.617)

Sampling time: 1

</pre>
Both the controllers are stabilizing
and ensure the same (minimal)
<!--%%ahinf.i%%-->-cost:
<pre>
   dahinorm ( sys, K1 )

err =
    2.5725

   dahinorm ( sys, K2 )

err =
    2.5725
</pre>


<H3>References</H3>
<p><A name="ref1"></A>[1]&nbsp;
M. Grimble, <I>Robust Industrial Control: Optimal Design
Approach for Polynomial Systems</I>, UK: Prentice-Hall,
Hemel Hempstead, 1994.
</p>

%%-->
