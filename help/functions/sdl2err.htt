<!--%%page.i
&secname=sdl2err
&name=
&next=sdmargin.html
&nextname=sdmargin
&prev=sdl2.html
&prevname=sdl2
&content=
<H4>sdl2err</H4>

<H3>Syntax</H3>
<p class="code">cost = sdl2err ( sys, K )</p>
<p class="code">cost = sdl2err ( sys, K, H )</p>
<p class="code">cost = sdl2err ( sys, K, method )</p>
<p class="code">cost = sdl2err ( sys, K, H, method )</p>

<H3>Description</H3>
<code>sdl2err</code> returns the <I>L</I><SUB>2</SUB>-norm
of the output for the <A HREF="../getstart/sdstd.html">standard sampled-data system</A>:
<CENTER><IMG SRC="../images/l2err0.gif" WIDTH=156 HEIGHT=47 ALT=""></CENTER>
It is assumed that the input <span class=tms>w</span> is a scalar
Dirac delta-function <span class=tms>&#948;</span>(<span class=tms>t</span>).

<H3>Arguments</H3>
<table border=1 cellpadding=5 width=100%>
<tr>
<td class="cc">sys</td>
<td>model of an LTI plant associated with the
<A HREF="../getstart/sdstd.html">standard sampled-data system</A>.
</td></tr>
<tr>
<td class="cc">K</td>
<td>feedback controller</td></tr>
<tr>
<td class="cc">H</td>
<td><A HREF="../getstart/sdstd.html#hold">generalized hold</A> given as an
LTI continuous-time model.
</td></tr>
<tr><td class="cc">method</td>
<td>
optional parameter
that specifies solution algorithm. There are two possible
methods:
<ul>
<LI><code>'ss'&nbsp;</code> - state-space solution (for delay-free systems only)
    <A HREF="#ref1">[1]</A>;
<LI><code>'pol'</code> - polynomial design method <A HREF="#ref3">[3]</A> (default);
</ul></td></tr>
</table>
<p>
If the hold is not given, a zero-order hold is used by default.

<H3>Return values</H3>
<table border=1 cellpadding=5 width=100%>
<tr>
<TD class="cc">cost</TD>
<TD><I>L</I><SUB>2</SUB>-norm of the output &#949; </TD>
</tr>
</tr>
</table>

<H3>Limitations</H3>
<ul>
<li>Controller <span class=tms>K</span> is a SISO system.
<LI> Transfer matrices <I>P</I><SUB>11</SUB>(s),
<I>P</I><SUB>21</SUB>(s),
and <I>P</I><SUB>22</SUB>(s) must be strictly proper,
<I>P</I><SUB>12</SUB>(s) must be at least proper.
</ul>

<H3>Example</H3>
<pre>
   F = tf ( 1, [1 -1] );
   R = tf ( 1, [1 0] );
   Q  = tf ( 1, [1 2] );
   T  = 0.5;
   sys = [-Q*R  F
             R -F];
   [K,cost] = sdl2 ( sys, T )
   cost = sdl2err ( sys, K )

K: zero-pole-gain model 1 x 1

      4.066 (z-0.9099) (z-0.3384)
      ---------------------------
          (z-1.364) (z-0.3349)

Sampling time: 0.5
cost =
    2.5845
cost =
    2.5845
</pre>

<H3>References</H3>
<p><A name="ref1"></A>[1]&nbsp;Chen, T., and B.A. Francis,
<I>Optimal Sampled-Data Control Systems</I>.
Berlin Heidelberg New York: Springer-Verlag, 1995.
</p>
<p><A name="ref2"></A>[2]&nbsp;Rosenwasser, E.N., and B.P. Lampe,
<I>Computer Controlled Systems: Analysis and Design with
Process-orientated Models</I>. London: Springer-Verlag, 2000.
</p>
<p><A name="ref3"></A>[3]&nbsp;Polyakov, K.Yu., Polynomial Design of Optimal
Sampled-data Control Systems, Dr. Sc. Thesis, State University of Ocean Technology,
St. Petersburg, 2006 [in Russian].
</p>

<H3>See also</H3>
<!--%%funref.i&name=sdl2&text=<code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><I>L</I><SUB>2</SUB>-optimization of sampled-data systems.%%-->
<!--%%funref.i&name=sd2dof&text=<code>&nbsp;&nbsp;&nbsp;</code>Optimal 2-DOF sampled-data system.%%-->
<!--%%funref.i&name=sd2doferr&text=Integral quadratic error for 2-DOF sampled-data system.%%-->

%%-->
