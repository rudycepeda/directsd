<!--%%page.i
&secname=sfactfft
&name=
&next=sfactor.html
&nextname=sfactor
&prev=separtf.html
&prevname=separtf
&content=
<H4>sfactfft</H4>

<H3>Syntax</H3>
<p class="code">fs = sfactfft ( s, type )</p>
<p class="code">fs = sfactfft ( s, type )</p>

<H3>Description</H3>
<code>sfactfft</code> performs spectral factorization of a
Hermitian self-conjugate quasipolynomial.
Returns a stable factor.

<H3>Arguments</H3>
<table border=1 cellpadding=5 width=100%>
<tr>
<td class="cc">s</td>
<td>Hermitian self-conjugate quasipolynomial or
symmetric array of coefficients.</td></tr>
<tr>
<td class="cc">type</td>
<td>type of factorization:
<ul>
<LI><code>'z'</code> - stability region is inside the unit disk
<LI><code>'d'</code> - stability region
is outside the unit disk (default)
</ul>
</td></tr>
</table>

<H3>Return values</H3>
<table border=1 cellpadding=5 width=100%>
<tr>
<TD class="cc">fs</TD>
<TD>stable polynomial spectral factor</TD></tr>
</table>

<H3>Examples</H3>
<B>Example 1.</B> Quasipolynomial as an array of coefficients.
<pre>
   s = [3 8 14 8 3]
   fs = sfactfft ( s )

fs =
    1.0000    2.0000    3.0000
    
</pre>
<B>Example 2.</B> Quasipolynomial as an object .
<pre>
   s = 3*z^2 + 8*z + 14 + 8*z^-1 + 3*z^-2;
   fs = sfactfft ( s )

fs: polynomial
  z^2 + 2 z + 3

   fs = sfactfft ( s, 'z' )

fs: polynomial
  3 z^2 + 2 z + 1
</pre>

<H3>References</H3>
<p><A name="ref1"></A>[1]&nbsp;Hromcik M., Jezek J., and Sebek M., New algorithm for
spectral factorization and its practical application // <i>Proc. European
Control Conference</i>, Porto, Portugal, September 1-5, 2001.
</p>

<H3>See also</H3>
<!--%%funref.i&name=factor&text=<code>&nbsp;</code>Polynomial factorization.%%-->
<!--%%funref.i&name=sfactor&text=Spectral factorization for polynomials and rational functions.%%-->

%%-->
